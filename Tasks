1. Установить в виртуальную машину или VDS Docker, настроить 
набор контейнеров через docker compose по инструкции.(не 
работает)
Часть с настройкой certbot и HTTPS опустить, если у вас нет 
настоящего домена и белого IP

version: `3`
services:
 db:
 image: mysql:8.0
 container_name: db
 restart: unless-stopped
 env_fle: .env
 enviroment:
 - MYSQL_DATABASE=wordpress
 volumes:
 - dbdata:/var/lib/mysql
 command: '--default-authentication-plugin=mysql_native_password'
 networks:
 - app-network
wordpress:
 depends_on:
 - db
 image: wordpress:6.0.1-php8.1-fpm-alpine
 container_name: wordpress
 restart: unless-stopped
env_file: .env
environment:
 - WORDPRESS_DB_HOST=db:3306
 - WORDPRESS_DB_USER=$MYSQL_USE
 - WORDPRESS_DB_PASSWORD=$MYSQL_PASSWORD
 - WORDPRESS_DB_NAME=wordpress
volumes:
 - wordpress:/var/www/html
networks:
 - app-network
webserver:
depends_on:
 - wordpress
image: nginx:1.22.0-alpine
container_name: webserver
restart: unless-stopped
ports:
 - "80:80"
volumes:
 - wordpress:/var/www/html
 - ./nginx-conf:/etc/nginx/conf.d
networks:
 - app-network
volumes:
wordpress:
dbdata:
networks:
app-network:
 driver: bridge
docker-compose up -d
docker-compose ps

2. Запустить два контейнера, связанные одной сетью (используя 
документацию).
Первый контейнер БД (например, образ mariadb:10.8), второй 
контейнер — phpmyadmin.
Получить доступ к БД в первом контейнере через второй 
контейнер (веб-интерфейс phpmyadmin).
docker network create some-network
docker run --rm --network some-network --name some-mariadb -e 
MYSQL_ROOT_PASSWORD=my-secret-pw -d mariadb:10.8
docker run --name myadmin -d --network some-network --link some-mariadb:db -
p 8082:80 phpmyadmin
docker ps
